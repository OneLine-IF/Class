<1>
리사이클러뷰에 대해서 알아보겠습니다.

<2>
리사이클러뷰란 목록을 동적으로 생성해서 화면에 보여주는 뷰입니다.
기존에는 ListView로 목록을 보여줬는데 리사이클러뷰가 더 향상된 성능을 제공하고 나서부터 보통 목록을 보여줄때 리사이클러뷰를 씁니다.

ListView와 다른점은 Adapter의 ViewHolder라는것을 사용해서 View를 재활용합니다. 따라서 View를 계속해서 만들지않고 재활용하게되어서 성능이 향상됩니다.

<3>
그럼 어떻게 사용해야하는지 알아봅시다.
먼저 리사이클러뷰는 Layout Manager, Adapter, ViewHolder 3가지가 필요합니다.
Layout Manager는 뷰가 어떤식으로 표현될지를 정합니다.
Adapter는 리사이클러뷰에 데이터를 연결해주는 역할입니다.
ViewHolder는 View에 들어갈 정보들을 목록 하나하나에 표시해주는 역할입니다.

다음과 같이 작동한다고 보면됩니다.

<4>
실제 코드로 알아봅시다.
먼저 xml에서 다음과같이 recyclerview를 만들어줍니다.
여기서 layoutmanger를 설정하는 방식은 xml 파일에서 다음과같이 설정하는 방법과 activity에서 따로 설정해주는 방법이 있습니다.
저는 보통은 다음과같이 xml 상에서 설정합니다.

<5>
그 다음 Adapter를 만들어줍니다.
Adapter는 다음과같이 Recyclerview의 Adapter를 상속받아 생성할때 viewHolder를 필요로합니다.
그래서 저는 보통 하단에 사용할 ViewHolder를 만들어줍니다.
그리고 ViewHolder를 설정하고나면 오버라이딩을 통해 다음과같이 메소드들이 생성하게됩니다.

각각 메소드들은 다음과 같은 역할을 합니다.

<6>
onCreateViewHolder : 각 아이템을 위한 뷰 객체를 만든 후 뷰홀더에 담아서 반환
onBindViewHolder: 뷰홀더에 각 아이템의 데이터를 설정
getItemCount: 어댑터에서 관리하는 아이템의 개수를 반환

<7>
그 다음 ViewHolder부터 구현합니다.
ViewHolder는 뷰를 담아두는 역할을 하면서 뷰에 표시될 데이터를 설정하는 역할을 하므로 ViewHolder에서 표시될 뷰에 관련된 설정을 해줍니다.
우리가 구현할 목록 뷰를 보면 다음과같이 Textview 하나에 데이터를 뿌려주는 식으로 하기때문에

<8>
다음과같이 ViewHolder에서 표시될 Textview 객체를 설정해줍니다.


<9>
그 다음 onCreateViewHodler 메소드에서 뷰 객체를 만들어주고 뷰홀더에 담아 반환해봅시다.
여기선 inflater를 사용해서 뷰 객체를 생성해줍니다.
inflater에 대해 잘 모른다면 아래 링크에 들어가서 배웁시다.
https://aroundck.tistory.com/39

<10>
그 후 BindViewHolder에 데이터를 설정해줍니다.
list에 담긴 데이터를 위치에 맞게 설정해주기 위해서 다음과같이 list.get(position)으로 리스트에서 아이템을 가져와서 텍스트뷰에 값을 설정해줍니다.

리스트는 처음 어댑터를 설정할때 한번 받아주고 그 이후 데이터를 변경할때는 setList로 리스트를 바꿔줍니다.
만약 리스트를 설정하지 않고 실행하면 어떻게 될까요? 직접해보시길 바랍니다.
